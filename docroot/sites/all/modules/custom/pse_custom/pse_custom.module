<?php

/**
 * Implements hook_theme().
 * @see hook_theme().
 */
function pse_custom_theme($existing, $type, $theme, $path) {
  return array(
    'pse_custom_resource_format' => array(
      'template' => 'templates/pse-custom-resource-format',
      'variables' => array(
        'content' => '',
      ),
    ),
  );
}

/**
 * @see hook_cron()
 */
function pse_custom_cron() {
  $start = strtotime('midnight');
  $end = strtotime('tomorrow midnight');

  $current_time = date('G');

  if ($current_time == '17') {
    $last_run = variable_get('tracking_downloads_email_cron');
    if ($last_run != date('dmy')) {
      $query = db_select('track_da_files', 'tdf')
        ->fields('tdf')
        ->condition('tdf.time', $start, '>=')
        ->condition('tdf.time', $end, '<=');
      $result = $query->execute();

      $downloads = array();
      foreach ($result as $download) {
        $downloads[] = $download;
      }
      if (!empty($downloads)) {
        drupal_mail('pse_custom', 'summmary_downloads', 'k.burness@psenterprise.com', language_default());
        drupal_mail('pse_custom', 'summmary_downloads', 's.shingla@psenterprise.com', language_default());
        drupal_mail('pse_custom', 'summmary_downloads', 's.gillespie@psenterprise.com', language_default());

        drupal_mail('pse_custom', 'summmary_downloads', 'sales@psenterprise.com', language_default());
        drupal_mail('pse_custom', 'summmary_downloads', 'marketing@psenterprise.com', language_default());
      }
      else {

        drupal_mail('pse_custom', 'summmary_downloads_none', 'k.burness@psenterprise.com', language_default());
        drupal_mail('pse_custom', 'summmary_downloads_none', 's.shingla@psenterprise.com', language_default());
        drupal_mail('pse_custom', 'summmary_downloads_none', 's.gillespie@psenterprise.com', language_default());


        drupal_mail('pse_custom', 'summmary_downloads_none', 'sales@psenterprise.com', language_default());
        drupal_mail('pse_custom', 'summmary_downloads_none', 'marketing@psenterprise.com', language_default());
      }

      // Setting the date here will make sure on the next cron run (within the
      // day) that this does not get executed, because it wcould be excuted at
      // 17:03 and then 17:39, but if we check to see if it has already run today
      // then we won't worry about it spaming the users.
      variable_set('tracking_downloads_email_cron', date('dmy'));
    }
  }
}

function pse_custom_mail($key, &$message, $params) {
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
//  $path = 'https://www.psenterprise.com/admin/reports/file-downloads-report?time%5Bmin%5D=midnight&time%5Bmax%5D=tomorrow+midnight&path=';
  $start = strtotime('midnight');
  $end = strtotime('tomorrow midnight');

  $start_date = format_date($start,'custom', 'd-m-Y');
  $end_date = format_date($end,'custom', 'd-m-Y');
  $software = "https://www.psenterprise.com/admin/reports/file-downloads-report?time%5bmin%5d=$start_date&time%5bmax%5d=$end_date&path=&type=document";
  $publications = "https://www.psenterprise.com/admin/reports/file-downloads-report?time%5Bmin%5D=$start_date&time%5Bmax%5D=$end_date&path=&type=document";

  switch ($key) {
    case 'summmary_downloads':
      $message['subject'] = 'Summary of downloaded files';
      $message['body'][] = t('Hi there,');
      $message['body'][] .= '<br>';
      $message['body'][] .= t('Files have been downloaded today. Please click !here for the software and publication/document download lists and select the relevant ‘Type’ from the dropdown menu.',  array(
      '!here' => l(t('here'), url($software)),
    ));
      $message['body'][] .= '<br>';
      $message['body'][] = t('Many thanks');
      $message['body'][] .= '<br>';
      $message['body'][] = t('PSE website admin');
      $message['body'][] .= '<br>';
      break;
    case 'summmary_downloads_none':
      $message['subject'] = 'Summary of downloaded files';
      $message['body'][] = t('Hi there');
      $message['body'][] .= '<br>';
      $message['body'][] .= t('No files have been downloaded today.');
      $message['body'][] .= '<br>';
      $message['body'][] .= 'Thanks';
      break;
  }
}

/**
 * Implements hook_form_alter().
 */
function pse_custom_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form') {
    if (isset($form['time'])) {
      $form['time']['min']['#title'] = t('From:');
      $form['time']['max']['#title'] = t('To:');
    }
    if (isset($form['completed'])) {
      $form['completed']['min']['#title'] = t('From:');
      $form['completed']['max']['#title'] = t('To:');
    }
  }

  if (strpos($form_id, 'webform_client_form_') !== FALSE) {
    $form['actions']['next']['#value'] = t('Continue');
    $has_select = 0;
    foreach ($form['submitted'] as $field) {
      if(is_array($field)) {
        $field_type = $field['#webform_component']['type'];
        if ($field_type == 'select_image') {
          $form['details']['page_count']['#attributes']['class'] = 'webform-select-type';
          $form['#attributes']['class'][] = 'webform-client-form-select-image-form-ben';

          $has_select = 1;
//          unset($form['#attributes']['class'][0]);
//          $form['#attributes']['select-form'] = 'webform-client-form-select-image-form';
        }
      }
    }
    if ($has_select) {
      unset($form['#attributes']['class'][0]);
      $form['details']['page_count']['#attributes']['class'] = 'webform-select-type-ben';
      $form['#attributes']['class'][] = 'webform-client-form-select-image-form';
    }

    $f='d';
  }
}

function pse_custom_js_alter(&$js) {
  $js['settings']['data'][] = array('better_exposed_filters'=> array('datepicker_options' => array('dateformat'=>'dd-mm-yy')));
}
function pse_custom_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'pse_custom') . '/views'
  );
}

/**
 * Implements hook_user_login().
 */
function pse_custom_user_login(&$edit, $account) {
  // 38 - industrial
  // 39 - academic
  if(user_has_role(38, $account)){
    setcookie('org_type', 'industrial-user', 0, '/');
  }
  elseif(user_has_role(39, $account)){
    setcookie('org_type', 'academic-user', 0, '/');
  }
}



/**
 * Implements hook_user_logout().
 */
function pse_custom_user_logout($account) {

  // 38 - industrial
  // 39 - academic
  if(user_has_role(38, $account) || user_has_role(39, $account)){
    // Set cookie in the past and then remove it.
    setcookie('org_type', '', REQUEST_TIME - 3600, '/');
    unset($_COOKIE['org_type']);
  }
}

/**
 * Implements hook_url_inbound_alter().
 */
function pse_custom_url_inbound_alter(&$path, $original_path, $path_language) {
  global $user;
  // industrial - 38
  // academic - 39

  // A user is trying to access documentations but is not logged in
  // Redirect them to login page then back to original destination
  if (strpos($original_path, 'sites/default/files/documentations') !== false && !user_is_logged_in()) {
    drupal_goto('user/login', array('query' => array('destination' => $original_path)));
  }

  if (strpos($original_path, 'sites/default/files/documentations') !== false && user_is_logged_in()) {
    if (user_has_role(38, $user) && strpos($original_path, '/il/') == false) {
      $role = 'il';
      $exploded_url = explode('/', $original_path);
      $exploded_url[3] = 'documentations/' . $role;
      $path = implode('/', $exploded_url);
      drupal_goto($path);
    }

    if (user_has_role(39, $user) && strpos($original_path, '/ac/') == false) {
      $role = 'ac';
      $exploded_url = explode('/', $original_path);
      $exploded_url[3] = 'documentations/' . $role;
      $path = implode('/', $exploded_url);
      drupal_goto($path);
    }
  }
}